name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://test_user:test_password@127.0.0.1:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install flake8 coverage

      - name: Wait for PostgreSQL to be ready
        run: |
          sudo apt-get install -y postgresql-client
          until pg_isready -h 127.0.0.1 -p 5432 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run flake8 linting
        run: |
          echo "Running flake8 lint checks..."
          flake8 messaging_app --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 messaging_app --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

      - name: Run Django migrations
        run: |
          cd messaging_app
          python manage.py migrate

      - name: Run tests with coverage
        run: |
          cd messaging_app
          coverage run manage.py test
          coverage xml
          coverage report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: messaging_app/coverage.xml